name: Test, build, deploy
on:
  push:
  pull_request:
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@331ce1d993939866bb63c32c6cbbfd48fa76fc57 # renovate: tag=v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Test code
        run: make unit-test
      - uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # renovate: tag=v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: unittests
  postgres-minio-integration-tests:
    env:
      DISTRYBUTE_TEST_DB: ${{ format('distrybute_{0}', github.run_id) }}
      MINIO_TEST_BUCKET_NAME: ${{ format('distrybute-{0}', github.run_id) }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ${{ env.DISTRYBUTE_TEST_DB }}
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      minio:
        image: fclairamb/minio-github-actions
        ports:
          - 9000/tcp
        options: >-
          --health-cmd "curl http://localhost:9000/minio/health/live"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install Go
        uses: actions/setup-go@331ce1d993939866bb63c32c6cbbfd48fa76fc57 # renovate: tag=v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Test code
        run: make postgres-minio-integration-test
        env:
          TEST_POSTGRES_HOST: localhost
          TEST_POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          TEST_POSTGRES_DB: ${{ env.DISTRYBUTE_TEST_DB }}
          TEST_MINIO_HOST: localhost
          TEST_MINIO_PORT: ${{ job.services.minio.ports[9000] }}
          TEST_MINIO_BUCKET_NAME: ${{ env.MINIO_TEST_BUCKET_NAME }}
      - uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # renovate: tag=v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: integrationtests
  docker-build:
    needs: [ postgres-minio-integration-tests, unit-tests ]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1
      - name: Login to DockerHub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1
        with:
          username: mmichaelb
          password: ${{ secrets.DOCKERHUB_SECRET }}
      - name: Login to Github Packages
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build docker image
        run: |
          make build-docker
      - name: Push docker image to Docker Hub
        run: |
          docker image push --all-tags mmichaelb/distrybute
        if: ${{ github.ref_type == 'tag' }}
      - name: Push docker image to GitHub Packages
        run: |
          docker image push --all-tags ghcr.io/mmichaelb/distrybute
        if: ${{ github.ref_type == 'tag' }}
